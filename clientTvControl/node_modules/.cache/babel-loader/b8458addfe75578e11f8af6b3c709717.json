{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leuma\\\\Documents\\\\Programming\\\\tvdisplaycontrol\\\\clientTvControl\\\\src\\\\Components\\\\Display.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Display extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImage = () => {\n      let elementstring = \"\";\n      fetch(\"http://localhost:5000/display\").then(response => {\n        return response.json();\n      }).then(body => {\n        elementstring = body.message;\n        let array = elementstring.trim().split(/\\s+/);\n        console.log(typeof array);\n        console.log(typeof this.state.result);\n        this.setState({\n          result: array\n        });\n        document.body.style.backgroundRepeat = \"no-repeat\";\n        document.body.style.backgroundSize = \"cover\";\n\n        if (!this.state.hasInterval) {\n          setInterval(this.triggerOnInterval(), 7000);\n          this.setState({\n            hasInterval: true\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.triggerOnInterval = () => {\n      let path = this.state.result[this.state.increment % this.state.result.length];\n      document.body.style.backgroundImage = \"url('http://localhost:5000/\" + path + \"')\";\n      this.setState({\n        increment: this.state.increment + 1\n      });\n      console.log(this.state.result);\n      console.log(\"hello\");\n    };\n\n    this.changeResultString = () => {};\n\n    this.state = {\n      image: \"ok\",\n      increment: 0,\n      result: [],\n      hasInterval: false\n    };\n    this.getImage();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","Display","constructor","props","getImage","elementstring","fetch","then","response","json","body","message","array","trim","split","console","log","state","result","setState","document","style","backgroundRepeat","backgroundSize","hasInterval","setInterval","triggerOnInterval","catch","error","path","increment","length","backgroundImage","changeResultString","image","render"],"sources":["C:/Users/leuma/Documents/Programming/tvdisplaycontrol/clientTvControl/src/Components/Display.js"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nexport default class Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: \"ok\",\r\n      increment: 0,\r\n      result: [],\r\n      hasInterval: false,\r\n    };\r\n    this.getImage();\r\n  }\r\n\r\n  getImage = () => {\r\n    let elementstring = \"\";\r\n    fetch(\"http://localhost:5000/display\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((body) => {\r\n        elementstring = body.message;\r\n        let array = elementstring.trim().split(/\\s+/);\r\n        console.log(typeof array);\r\n        console.log(typeof this.state.result);\r\n        this.setState({ result: array });\r\n        document.body.style.backgroundRepeat = \"no-repeat\";\r\n        document.body.style.backgroundSize = \"cover\";\r\n        if (!this.state.hasInterval) {\r\n          setInterval(this.triggerOnInterval(), 7000);\r\n          this.setState({ hasInterval: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  triggerOnInterval = () => {\r\n    let path =\r\n      this.state.result[this.state.increment % this.state.result.length];\r\n    document.body.style.backgroundImage =\r\n      \"url('http://localhost:5000/\" + path + \"')\";\r\n    this.setState({ increment: this.state.increment + 1 });\r\n    console.log(this.state.result);\r\n    console.log(\"hello\");\r\n  };\r\n  changeResultString = () => {};\r\n\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAC7CE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAWnBC,QAXmB,GAWR,MAAM;MACf,IAAIC,aAAa,GAAG,EAApB;MACAC,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;QAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACD,CAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;QACdL,aAAa,GAAGK,IAAI,CAACC,OAArB;QACA,IAAIC,KAAK,GAAGP,aAAa,CAACQ,IAAd,GAAqBC,KAArB,CAA2B,KAA3B,CAAZ;QACAC,OAAO,CAACC,GAAR,CAAY,OAAOJ,KAAnB;QACAG,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKC,KAAL,CAAWC,MAA9B;QACA,KAAKC,QAAL,CAAc;UAAED,MAAM,EAAEN;QAAV,CAAd;QACAQ,QAAQ,CAACV,IAAT,CAAcW,KAAd,CAAoBC,gBAApB,GAAuC,WAAvC;QACAF,QAAQ,CAACV,IAAT,CAAcW,KAAd,CAAoBE,cAApB,GAAqC,OAArC;;QACA,IAAI,CAAC,KAAKN,KAAL,CAAWO,WAAhB,EAA6B;UAC3BC,WAAW,CAAC,KAAKC,iBAAL,EAAD,EAA2B,IAA3B,CAAX;UACA,KAAKP,QAAL,CAAc;YAAEK,WAAW,EAAE;UAAf,CAAd;QACD;MACF,CAhBH,EAiBGG,KAjBH,CAiBUC,KAAD,IAAW;QAChBb,OAAO,CAACC,GAAR,CAAYY,KAAZ;MACD,CAnBH;IAoBD,CAjCkB;;IAAA,KAkCnBF,iBAlCmB,GAkCC,MAAM;MACxB,IAAIG,IAAI,GACN,KAAKZ,KAAL,CAAWC,MAAX,CAAkB,KAAKD,KAAL,CAAWa,SAAX,GAAuB,KAAKb,KAAL,CAAWC,MAAX,CAAkBa,MAA3D,CADF;MAEAX,QAAQ,CAACV,IAAT,CAAcW,KAAd,CAAoBW,eAApB,GACE,gCAAgCH,IAAhC,GAAuC,IADzC;MAEA,KAAKV,QAAL,CAAc;QAAEW,SAAS,EAAE,KAAKb,KAAL,CAAWa,SAAX,GAAuB;MAApC,CAAd;MACAf,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,MAAvB;MACAH,OAAO,CAACC,GAAR,CAAY,OAAZ;IACD,CA1CkB;;IAAA,KA2CnBiB,kBA3CmB,GA2CE,MAAM,CAAE,CA3CV;;IAEjB,KAAKhB,KAAL,GAAa;MACXiB,KAAK,EAAE,IADI;MAEXJ,SAAS,EAAE,CAFA;MAGXZ,MAAM,EAAE,EAHG;MAIXM,WAAW,EAAE;IAJF,CAAb;IAMA,KAAKpB,QAAL;EACD;;EAoCD+B,MAAM,GAAG;IACP,oBAAO;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AAhD4C"},"metadata":{},"sourceType":"module"}