{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\TvDisplayControl\\\\clientTvControl\\\\src\\\\Components\\\\Display.js\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Display extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImage = () => {\n      let elementstring = \"\";\n      fetch(\"https://server-for-mcgill-display.herokuapp.com/display\").then(response => {\n        return response.json();\n      }).then(body => {\n        elementstring = body.message;\n        let array = elementstring.trim().split(/\\s+/);\n        this.setState({\n          result: array\n        });\n        document.body.style.backgroundRepeat = \"no-repeat\";\n        document.body.style.backgroundSize = \"cover\";\n        console.log(array);\n\n        if (!this.state.hasInterval) {\n          this.triggerOnInterval();\n          this.timerID = setInterval(() => this.triggerOnInterval(), 12000);\n          this.setState({\n            hasInterval: true\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.triggerOnInterval = () => {\n      let path = this.state.result[this.state.increment % this.state.result.length];\n      document.body.style.backgroundImage = \"url('https://server-for-mcgill-display.herokuapp.com/\" + path + \"')\";\n      this.setState({\n        increment: this.state.increment + 1\n      });\n      console.log(this.state.result);\n\n      if (this.state.increment % 60 == 0) {\n        this.getImage();\n      }\n    };\n\n    this.changeResultString = () => {};\n\n    this.state = {\n      image: \"ok\",\n      increment: 0,\n      result: [],\n      hasInterval: false\n    };\n  }\n\n  componentWillMount() {\n    this.getImage();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","Display","constructor","props","getImage","elementstring","fetch","then","response","json","body","message","array","trim","split","setState","result","document","style","backgroundRepeat","backgroundSize","console","log","state","hasInterval","triggerOnInterval","timerID","setInterval","catch","error","path","increment","length","backgroundImage","changeResultString","image","componentWillMount","componentWillUnmount","clearInterval","render"],"sources":["C:/Users/admin/Desktop/TvDisplayControl/clientTvControl/src/Components/Display.js"],"sourcesContent":["import { Component } from \"react\";\r\n\r\nexport default class Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: \"ok\",\r\n      increment: 0,\r\n      result: [],\r\n      hasInterval: false,\r\n    };\r\n  }\r\n\r\n  getImage = () => {\r\n    let elementstring = \"\";\r\n    fetch(\"https://server-for-mcgill-display.herokuapp.com/display\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((body) => {\r\n        elementstring = body.message;\r\n        let array = elementstring.trim().split(/\\s+/);\r\n        this.setState({ result: array });\r\n        document.body.style.backgroundRepeat = \"no-repeat\";\r\n        document.body.style.backgroundSize = \"cover\";\r\n        console.log(array);\r\n        if (!this.state.hasInterval) {\r\n          this.triggerOnInterval();\r\n          this.timerID = setInterval(() => this.triggerOnInterval(), 12000);\r\n          this.setState({ hasInterval: true });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  componentWillMount(){\r\n    this.getImage();\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n  triggerOnInterval = () => {\r\n    let path =\r\n      this.state.result[this.state.increment % this.state.result.length];\r\n    document.body.style.backgroundImage =\r\n      \"url('https://server-for-mcgill-display.herokuapp.com/\" + path + \"')\";\r\n    this.setState({ increment: this.state.increment + 1 });\r\n    console.log(this.state.result);\r\n    if (this.state.increment % 60 == 0) {\r\n      this.getImage();\r\n    }\r\n  };\r\n  changeResultString = () => {};\r\n\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAC7CE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAUnBC,QAVmB,GAUR,MAAM;MACf,IAAIC,aAAa,GAAG,EAApB;MACAC,KAAK,CAAC,yDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;QAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACD,CAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;QACdL,aAAa,GAAGK,IAAI,CAACC,OAArB;QACA,IAAIC,KAAK,GAAGP,aAAa,CAACQ,IAAd,GAAqBC,KAArB,CAA2B,KAA3B,CAAZ;QACA,KAAKC,QAAL,CAAc;UAAEC,MAAM,EAAEJ;QAAV,CAAd;QACAK,QAAQ,CAACP,IAAT,CAAcQ,KAAd,CAAoBC,gBAApB,GAAuC,WAAvC;QACAF,QAAQ,CAACP,IAAT,CAAcQ,KAAd,CAAoBE,cAApB,GAAqC,OAArC;QACAC,OAAO,CAACC,GAAR,CAAYV,KAAZ;;QACA,IAAI,CAAC,KAAKW,KAAL,CAAWC,WAAhB,EAA6B;UAC3B,KAAKC,iBAAL;UACA,KAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKF,iBAAL,EAAP,EAAiC,KAAjC,CAA1B;UACA,KAAKV,QAAL,CAAc;YAAES,WAAW,EAAE;UAAf,CAAd;QACD;MACF,CAhBH,EAiBGI,KAjBH,CAiBUC,KAAD,IAAW;QAChBR,OAAO,CAACC,GAAR,CAAYO,KAAZ;MACD,CAnBH;IAoBD,CAhCkB;;IAAA,KAwCnBJ,iBAxCmB,GAwCC,MAAM;MACxB,IAAIK,IAAI,GACN,KAAKP,KAAL,CAAWP,MAAX,CAAkB,KAAKO,KAAL,CAAWQ,SAAX,GAAuB,KAAKR,KAAL,CAAWP,MAAX,CAAkBgB,MAA3D,CADF;MAEAf,QAAQ,CAACP,IAAT,CAAcQ,KAAd,CAAoBe,eAApB,GACE,0DAA0DH,IAA1D,GAAiE,IADnE;MAEA,KAAKf,QAAL,CAAc;QAAEgB,SAAS,EAAE,KAAKR,KAAL,CAAWQ,SAAX,GAAuB;MAApC,CAAd;MACAV,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWP,MAAvB;;MACA,IAAI,KAAKO,KAAL,CAAWQ,SAAX,GAAuB,EAAvB,IAA6B,CAAjC,EAAoC;QAClC,KAAK3B,QAAL;MACD;IACF,CAlDkB;;IAAA,KAmDnB8B,kBAnDmB,GAmDE,MAAM,CAAE,CAnDV;;IAEjB,KAAKX,KAAL,GAAa;MACXY,KAAK,EAAE,IADI;MAEXJ,SAAS,EAAE,CAFA;MAGXf,MAAM,EAAE,EAHG;MAIXQ,WAAW,EAAE;IAJF,CAAb;EAMD;;EAyBDY,kBAAkB,GAAE;IAClB,KAAKhC,QAAL;EACD;;EAEDiC,oBAAoB,GAAG;IACrBC,aAAa,CAAC,KAAKZ,OAAN,CAAb;EACD;;EAcDa,MAAM,GAAG;IACP,oBAAO;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AAxD4C"},"metadata":{},"sourceType":"module"}