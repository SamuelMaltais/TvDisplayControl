{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\TvDisplayControl\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ImageUploader from \"react-images-upload\";\nimport Header from \"./Components/Header.js\";\nimport { createForm, formShape } from 'rc-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submit = () => {\n      this.props.form.validateFields((error, value) => {\n        console.log(error, value);\n      });\n    };\n\n    this.state = {\n      pictures: []\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  onDrop(pictureFiles, pictureDataURLs) {\n    this.setState({\n      pictures: this.state.pictures.concat(pictureFiles)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getFieldProps('normal')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getFieldProps('required', {\n          onChange() {},\n\n          // have to write original onChange here if you need\n          rules: [{\n            required: true\n          }]\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), (errors = getFieldError('required')) ? errors.join(',') : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.submit,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUploader, {\n        withIcon: true,\n        buttonText: \"Choose images\",\n        onChange: this.onDrop,\n        imgExtension: [\".jpg\", \".gif\", \".png\", \".gif\"],\n        maxFileSize: 5242880\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nApp.propTypes = {\n  form: formShape\n};","map":{"version":3,"names":["React","Component","ImageUploader","Header","createForm","formShape","App","constructor","props","submit","form","validateFields","error","value","console","log","state","pictures","onDrop","bind","pictureFiles","pictureDataURLs","setState","concat","render","getFieldProps","onChange","rules","required","errors","getFieldError","join","propTypes"],"sources":["C:/Users/Samuel/Desktop/TvDisplayControl/client/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport ImageUploader from \"react-images-upload\";\r\nimport Header from \"./Components/Header.js\";\r\nimport { createForm, formShape } from 'rc-form';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            pictures: [] \r\n        };\r\n        this.onDrop = this.onDrop.bind(this);\r\n      }\r\n      static propTypes = {\r\n        form: formShape,\r\n      };\r\n    \r\n      submit = () => {\r\n        this.props.form.validateFields((error, value) => {\r\n          console.log(error, value);\r\n        });\r\n      }\r\n      onDrop(pictureFiles, pictureDataURLs) {\r\n        this.setState({\r\n          pictures: this.state.pictures.concat(pictureFiles)\r\n        });\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n                <input {...getFieldProps('normal')}/>\r\n        <input {...getFieldProps('required', {\r\n          onChange(){}, // have to write original onChange here if you need\r\n          rules: [{required: true}],\r\n        })}/>\r\n        {(errors = getFieldError('required')) ? errors.join(',') : null}\r\n        <button onClick={this.submit}>submit</button>\r\n                     <ImageUploader\r\n                    withIcon={true}\r\n                    buttonText=\"Choose images\"\r\n                    onChange={this.onDrop}\r\n                    imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\r\n                    maxFileSize={5242880}\r\n      />\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;;AAEA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;EACvCM,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAWjBC,MAXiB,GAWR,MAAM;MACb,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,KAAD,EAAQC,KAAR,KAAkB;QAC/CC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,KAAnB;MACD,CAFD;IAGD,CAfgB;;IAEf,KAAKG,KAAL,GAAa;MACTC,QAAQ,EAAE;IADD,CAAb;IAGA,KAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;EACD;;EAUDD,MAAM,CAACE,YAAD,EAAeC,eAAf,EAAgC;IACpC,KAAKC,QAAL,CAAc;MACZL,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBM,MAApB,CAA2BH,YAA3B;IADE,CAAd;EAGD;;EACHI,MAAM,GAAG;IACL,oBACI;MAAA,wBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,sBAAWC,aAAa,CAAC,QAAD;MAAxB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGJ,sBAAWA,aAAa,CAAC,UAAD,EAAa;UACnCC,QAAQ,GAAE,CAAE,CADuB;;UACrB;UACdC,KAAK,EAAE,CAAC;YAACC,QAAQ,EAAE;UAAX,CAAD;QAF4B,CAAb;MAAxB;QAAA;QAAA;QAAA;MAAA,QAHI,EAOH,CAACC,MAAM,GAAGC,aAAa,CAAC,UAAD,CAAvB,IAAuCD,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAvC,GAA0D,IAPvD,eAQJ;QAAQ,OAAO,EAAE,KAAKtB,MAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARI,eASS,QAAC,aAAD;QACD,QAAQ,EAAE,IADT;QAED,UAAU,EAAC,eAFV;QAGD,QAAQ,EAAE,KAAKS,MAHd;QAID,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAJb;QAKD,WAAW,EAAE;MALZ;QAAA;QAAA;QAAA;MAAA,QATT;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAmBH;;AA1CsC;AAAtBZ,G,CAQR0B,S,GAAY;EACjBtB,IAAI,EAAEL;AADW,C"},"metadata":{},"sourceType":"module"}