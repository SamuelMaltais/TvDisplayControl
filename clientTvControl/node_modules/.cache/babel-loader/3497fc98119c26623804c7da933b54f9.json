{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\TvDisplayControl\\\\clientTvControl\\\\src\\\\Components\\\\Display.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Display extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImage = () => {\n      let result = [];\n      let elementstring = \"\"; //for (let i = 0; i < 100000; i++) {\n\n      fetch(\"http://localhost:5000/display\").then(response => {\n        return response.json();\n      }).then(body => {\n        elementstring = body.message;\n        result = elementstring.trim().split(/\\s+/);\n        console.log(result);\n      }).catch(error => {\n        console.log(\"error\");\n      });\n      result.forEach(path => {\n        this.setState({\n          image: \"http://localhost:5000\" + path\n        });\n        console.log(this.state.image);\n      });\n    };\n\n    this.getImage();\n    this.state = {\n      image: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: this.state.image,\n        backgroundSize: \"100%\"\n      },\n      children: this.state.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Display","constructor","props","getImage","result","elementstring","fetch","then","response","json","body","message","trim","split","console","log","catch","error","forEach","path","setState","image","state","render","backgroundImage","backgroundSize"],"sources":["C:/Users/Samuel/Desktop/TvDisplayControl/clientTvControl/src/Components/Display.js"],"sourcesContent":["import React, { Component } from 'react'\r\nexport default class Display extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getImage();\r\n        this.state = {\r\n            image: \"\"\r\n        };\r\n    }\r\n    getImage = () => {\r\n        let result = []\r\n        let elementstring = \"\";\r\n        //for (let i = 0; i < 100000; i++) {\r\n        fetch(\"http://localhost:5000/display\")\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(body => {\r\n                elementstring = body.message\r\n                result = elementstring.trim().split(/\\s+/);\r\n                console.log(result)\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n        result.forEach(path => {\r\n            this.setState({ image: \"http://localhost:5000\" + path })\r\n            console.log(this.state.image)\r\n\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ backgroundImage: this.state.image, backgroundSize: \"100%\" }}>\r\n                {this.state.image}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAC3CE,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAOnBC,QAPmB,GAOR,MAAM;MACb,IAAIC,MAAM,GAAG,EAAb;MACA,IAAIC,aAAa,GAAG,EAApB,CAFa,CAGb;;MACAC,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACH,CAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;QACVL,aAAa,GAAGK,IAAI,CAACC,OAArB;QACAP,MAAM,GAAGC,aAAa,CAACO,IAAd,GAAqBC,KAArB,CAA2B,KAA3B,CAAT;QACAC,OAAO,CAACC,GAAR,CAAYX,MAAZ;MACH,CARL,EASKY,KATL,CASWC,KAAK,IAAI;QACZH,OAAO,CAACC,GAAR,CAAY,OAAZ;MACH,CAXL;MAYAX,MAAM,CAACc,OAAP,CAAeC,IAAI,IAAI;QACnB,KAAKC,QAAL,CAAc;UAAEC,KAAK,EAAE,0BAA0BF;QAAnC,CAAd;QACAL,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWD,KAAvB;MAEH,CAJD;IAKH,CA5BkB;;IAEf,KAAKlB,QAAL;IACA,KAAKmB,KAAL,GAAa;MACTD,KAAK,EAAE;IADE,CAAb;EAGH;;EAuBDE,MAAM,GAAG;IACL,oBACI;MAAK,KAAK,EAAE;QAAEC,eAAe,EAAE,KAAKF,KAAL,CAAWD,KAA9B;QAAqCI,cAAc,EAAE;MAArD,CAAZ;MAAA,UACK,KAAKH,KAAL,CAAWD;IADhB;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;AApC0C"},"metadata":{},"sourceType":"module"}