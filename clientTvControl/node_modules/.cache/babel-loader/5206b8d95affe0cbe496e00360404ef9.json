{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\TvDisplayControl\\\\clientTvControl\\\\src\\\\Components\\\\Display.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Display extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImage = () => {\n      let result = [];\n      let elementstring = \"\"; //for (let i = 0; i < 100000; i++) {\n\n      fetch(\"http://localhost:5000/display\").then(response => {\n        return response.json();\n      }).then(body => {\n        elementstring = body.message;\n        result = elementstring.trim().split(/\\s+/);\n        const values = Object.values(result);\n        result.forEach(path => {\n          document.body.style.backgroundRepeat = \"no-repeat\";\n          document.body.style.backgroundSize = \"cover\";\n          document.body.style.backgroundImage = \"url('http://localhost:5000/\" + path + \"')\";\n        });\n      }).catch(error => {\n        console.log(\"error\");\n      });\n    };\n\n    this.state = {\n      image: \"ok\"\n    };\n    this.getImage();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Display","constructor","props","getImage","result","elementstring","fetch","then","response","json","body","message","trim","split","values","Object","forEach","path","document","style","backgroundRepeat","backgroundSize","backgroundImage","catch","error","console","log","state","image","render"],"sources":["C:/Users/Samuel/Desktop/TvDisplayControl/clientTvControl/src/Components/Display.js"],"sourcesContent":["import React, { Component } from 'react'\r\nexport default class Display extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            image: \"ok\"\r\n        };\r\n        this.getImage();\r\n    }\r\n    getImage = () => {\r\n        let result = []\r\n        let elementstring = \"\";\r\n        //for (let i = 0; i < 100000; i++) {\r\n        fetch(\"http://localhost:5000/display\")\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(body => {\r\n                elementstring = body.message\r\n                result = elementstring.trim().split(/\\s+/);\r\n                const values = Object.values(result)\r\n                result.forEach(path => {\r\n                    document.body.style.backgroundRepeat = \"no-repeat\"\r\n                    document.body.style.backgroundSize = \"cover\"\r\n                    document.body.style.backgroundImage = \"url('http://localhost:5000/\" + path + \"')\"\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\")\r\n            });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,eAAe,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAC3CE,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;;IADe,KAOnBC,QAPmB,GAOR,MAAM;MACb,IAAIC,MAAM,GAAG,EAAb;MACA,IAAIC,aAAa,GAAG,EAApB,CAFa,CAGb;;MACAC,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;QACd,OAAOA,QAAQ,CAACC,IAAT,EAAP;MACH,CAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;QACVL,aAAa,GAAGK,IAAI,CAACC,OAArB;QACAP,MAAM,GAAGC,aAAa,CAACO,IAAd,GAAqBC,KAArB,CAA2B,KAA3B,CAAT;QACA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAcV,MAAd,CAAf;QACAA,MAAM,CAACY,OAAP,CAAeC,IAAI,IAAI;UACnBC,QAAQ,CAACR,IAAT,CAAcS,KAAd,CAAoBC,gBAApB,GAAuC,WAAvC;UACAF,QAAQ,CAACR,IAAT,CAAcS,KAAd,CAAoBE,cAApB,GAAqC,OAArC;UACAH,QAAQ,CAACR,IAAT,CAAcS,KAAd,CAAoBG,eAApB,GAAsC,gCAAgCL,IAAhC,GAAuC,IAA7E;QACH,CAJD;MAKH,CAbL,EAcKM,KAdL,CAcWC,KAAK,IAAI;QACZC,OAAO,CAACC,GAAR,CAAY,OAAZ;MACH,CAhBL;IAkBH,CA7BkB;;IAEf,KAAKC,KAAL,GAAa;MACTC,KAAK,EAAE;IADE,CAAb;IAGA,KAAKzB,QAAL;EACH;;EAwBD0B,MAAM,GAAG;IACL,oBACI;MAAA;MAAA;MAAA;IAAA,QADJ;EAIH;;AApC0C"},"metadata":{},"sourceType":"module"}